hdfs dfs -mkdir /ctic/landing/clientes

hdfs dfs -put /home/aquiroz/data/clienteslite.csv /ctic/landing/clientes


1. Ejecutar el Script por Beeline
use antonioc;/*indicar la base de datos a usar*/
CREATE EXTERNAL TABLE IF NOT EXISTS virtualcoach.cliente(
idcliente string COMMENT 'IdCliente',
dni string COMMENT 'DNI',
apellidopaterno string COMMENT 'ApellidoPaterno',
apellidomaterno string COMMENT 'ApellidoMaterno',
nombres string COMMENT 'Nombres',
genero string COMMENT 'Genero',
direccion string COMMENT 'Direccion',
distrito string COMMENT 'Distrito',
correo string COMMENT 'Correo',
telefono1 int COMMENT 'Telefono1',
telefono2 int COMMENT 'Telefono2'
)
COMMENT 'Tabla cliente'
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
STORED AS TEXTFILE
LOCATION '/ctic/landing/clientes'/*Ruta en HDFS donde buscará la data*/ 
tblproperties("skip.header.line.count" = "1");


2. Validar la cración de la tabla
show tables in virtualcoach;

3. Validar la ruta y contenido en HDFS
select * from virtualcoach.cliente;

4. revisar la estructura de la tabla
show create table virtualcoach.cliente;


CREATE EXTERNAL TABLE IF NOT EXISTS virtualcoach.transaccion(
idcliente string,
Monto float,
FormatoTransaccion string,
TipoTransaccion string,
IdTienda string,
Fecha date,
IdProducto string,
Unidades integer 
)
COMMENT 'Tabla transacciones'
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
STORED AS TEXTFILE
LOCATION '/ctic/landing/transaccion'
tblproperties("skip.header.line.count" = "1");




Crear Tabla con partición estática
###########################################################
1. Creamos la tabla
CREATE EXTERNAL TABLE virtualcoach.tabla_particion_estatica
(
    Fecha String,
    TipoCliente String,
    TipoTransaccion String,
    Monto String
)
PARTITIONED BY (mensual STRING)
STORED AS PARQUET
LOCATION '/ctic/landing/tabla_particion_estatica';



insert into virtualcoach.tabla_particion_estatica partition(mensual ='201612')
select 
  from_unixtime (unix_timestamp(Concat(substring(fecha,1,4),SUBSTRING(Fecha,5,2), SUBSTRING(Fecha,7,2)), 'yyyyMMdd'), 'yyyy-MM-dd') as Fecha,
  case
    when Monto < 50 then 'Standard'
    when Monto between 51 and 100 then 'Medium'
    else 'Top'
  end as TipoCliente,
  case
    when TipoTransaccion = 'BOL' then 'Boleta'    
    else 'Factura'
  end as TipoTransaccion,
  cast(Monto as decimal(19, 2)) as Monto
from virtualcoach.transaccion
where from_unixtime (unix_timestamp(Concat(substring(fecha,1,4),SUBSTRING(Fecha,5,2), SUBSTRING(Fecha,7,2)), 'yyyyMMdd'), 'yyyy-MM-dd')='201612';

//refrescar la metadata 
msck repair table virtualcoach.tabla_particion_estatica;


CREATE EXTERNAL TABLE IF NOT EXISTS virtualcoach.cliente_buckets (
 IdTienda string,
 Sucursal string,
 Distrito string,
 Tipo string,
 DistritoTipo string
 )
 CLUSTERED BY (Sucursal) INTO 2 BUCKETS 
 ROW FORMAT DELIMITED
 FIELDS TERMINATED BY '|'
 COLLECTION ITEMS TERMINATED BY ','
 MAP KEYS TERMINATED BY ':'
LOCATION '/ctic/landing/tabla_bucketing';



/*Engines: Tez, Spark y MapReduce*/
set map.reduce.tasks = 2; /*Prodiedades de Hive*/
set hive.enforce.bucketing = true;/*Habilitamos el bucketing*/
INSERT OVERWRITE TABLE virtualcoach.cliente_buckets SELECT cast(idtienda as string)idtienda,sucursal,distritito,tipo,distritotipo  FROM virtualcoach.tienda;

###########################################################
Crear Tabla con partición dinámica
###########################################################

set hive.exec.dynamic.partition=true;
set hive.exec.dynamic.partition.mode=nonstrict;

CREATE TABLE virtualcoach.tabla_particion_dinamica
(
    TipoCliente String,
    TipoTransaccion String,
    Monto String
)
PARTITIONED BY (Fecha string)
STORED AS PARQUET
LOCATION '/ctic/landing/tabla_particion_dinamica';


insert into table virtualcoach.tabla_particion_dinamica partition (Fecha)
SELECT
  case
    when Monto < 50 then 'Standard'
    when Monto between 51 and 100 then 'Medium'
    else 'Top'
  end as TipoCliente,
  case
    when TipoTransaccion = 'BOL' then 'Boleta'    
    else 'Factura'
  end as TipoTransaccion,
  cast(Monto as decimal(19, 2)) as Monto,
  from_unixtime (unix_timestamp(Concat(substring(fecha,1,4),SUBSTRING(Fecha,5,2), SUBSTRING(Fecha,7,2)), 'yyyyMMdd'), 'yyyy-MM-dd') as Fecha
FROM virtualcoach.transaccion;


###########################################################
User Define Functions UDFs
###########################################################

SELECT
  from_unixtime(unix_timestamp(CONCAT(SUBSTRING(Fecha, 7, 4), SUBSTRING(Fecha, 4, 2), SUBSTRING(Fecha, 1, 2)), 'yyyyMMdd'), 'yyyy-MM-dd') AS FecRegistro,
  UPPER(profundida) AS profundida,
  CASE
    WHEN profundida < 10 THEN 'BAJA'
    WHEN profundida BETWEEN 10 AND 50 THEN 'MEDIA'
    ELSE 'ALTA'
  END AS medidaprod,
  geom,
  magnitud__
FROM sesion_dos.tabla_externa;

SELECT
  from_unixtime(unix_timestamp(CONCAT(SUBSTRING(Fecha, 7, 4), SUBSTRING(Fecha, 4, 2), SUBSTRING(Fecha, 1, 2)), 'yyyyMMdd'), 'yyyy-MM-dd') AS FecRegistro,
  COUNT(distinct geom)
FROM sesion_dos.tabla_externa
GROUP BY from_unixtime(unix_timestamp(CONCAT(SUBSTRING(Fecha, 7, 4), SUBSTRING(Fecha, 4, 2), SUBSTRING(Fecha, 1, 2)), 'yyyyMMdd'), 'yyyy-MM-dd');


