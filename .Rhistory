x<- c(1,2,3)
y<- c(4,5,6)
z<- c(7,8,9)
A<- cbind(x,y,z)
names(A)[1] <-"Enero"
names(A)[2]<-"Febrero"
names(A)[3]<-"Marzo"
View(A)
is.matrix(A)
X
X
X<- 1:3
X
Y<-3:5
Y
Z
X<- 1:3
X
Y<-4:6
Y
Z<-7:9
Z
A
A
row.names(A)<- ("ENERO","FEBRERO","MARZO")
A
X<- 1:3
X
Y<-4:6
Y
Z<-7:9
Z
A<-rbind(X,Y,Z)
A
row.names(A)<- ("ENERO","FEBRERO","MARZO")
A
row.names(A)<- (X="ENERO",Y="FEBRERO",Z="MARZO")
A
row.names(A)<- (X="ENERO",Y="FEBRERO",Z="MARZO")
X<- 1:3
X
Y<-4:6
Y
Z<-7:9
Z
A<-rbind(X,Y,Z)
A
X<- 1:3
X
Y<-4:6
Y
Z<-7:9
Z
A<-cbind(X,Y,Z)
A
X<- 1:3
X
Y<-4:6
Y
Z<-7:9
Z
A<-cbind(X,Y,Z)
A
rownames(A) <- c("Enero", "Febrero", "Marzo")
A
is.matrix(A)
Z<- runif(12,min = 0,max = 1000)
Z
B<-matrix(z,nrow = 4,ncol = 3)
B<-matrix(Z,nrow = 4,ncol = 3)
Z
B
rownames(B) <- c("a", "b", "c","d")
colnames(B) <- c("x", "y", "z")
B
#PREGUNTA 1
X<- 1:3
#PREGUNTA 1
X<- 1:3
Y<-4:6
Z<-7:9
A<-cbind(X,Y,Z)
A
rownames(A) <- c("Enero", "Febrero", "Marzo")
is.matrix(A)
#PREGUTA 2
Z<- runif(12,min = 0,max = 1000)
B<-matrix(Z,nrow = 4,ncol = 3)
rownames(B) <- c("a", "b", "c","d")
colnames(B) <- c("x", "y", "z")
B
#PREGUNTA 1
X<- 1:3
Y<-4:6
Z<-7:9
A<-cbind(X,Y,Z)
A
rownames(A) <- c("Enero", "Febrero", "Marzo")
is.matrix(A)
#PREGUTA 2
Z<- runif(12,min = 0,max = 1000)
B<-matrix(Z,nrow = 4,ncol = 3)
rownames(B) <- c("a", "b", "c","d")
colnames(B) <- c("x", "y", "z")
B
t(B)
t(B)<-t(B)
tB<-t(B)
tB
#PREGUTA 5
B%%tB
#PREGUTA 5
B%tB
#PREGUTA 5
tB%B
#PREGUTA 5
tB%%B
#PREGUTA 5
tB*B
#PREGUTA 5
B*tB
#PREGUTA 5
tB*tB
tB
#PREGUTA 5
tB%%tB
#PREGUTA 5
tB*tB
df_A<-as.data.frame(A)
my.dataframe$new.col<[π,π*π,π*π*π]
my.dataframe$new.col<π,π*π,π*π*π
w<-[π,π*π,π*π*π]
w<-c(π,π*π,π*π*π)
w<-c(pi,pi*pi,pi*pi*pi)
w
my.dataframe$new.col< a.w
df_A$new.col< a.w
df_A$new.col<-w
df_A
df_A$W<-w
df_A
df_A$w<-w
df_A
#PREGUNTA 1
X<- 1:3
Y<-4:6
Z<-7:9
A<-cbind(X,Y,Z)
A
rownames(A) <- c("Enero", "Febrero", "Marzo")
is.matrix(A)
#PREGUTA 3
Z<- runif(12,min = 0,max = 1000)
B<-matrix(Z,nrow = 4,ncol = 3)
rownames(B) <- c("a", "b", "c","d")
colnames(B) <- c("x", "y", "z")
B
#PREGUTA 4
tB<-t(B)
tB
#PREGUTA 5
tB*tB
#PREGUNTA 6
df_A<-as.data.frame(A)
w<-c(pi,pi*pi,pi*pi*pi)
df_A$w<-w
df_A
View(df_A)
set.seed(75)
aMat <− matrix(sample ( 1 0 , size =60 , replace=T) , nr =6)
set.seed(75)
aMat <− matrix(sample ( 10 , size =60 , replace=T) , nr =6)
aMat
View(A)
mean
?mean
help
help
help.start()
help(package="ggplot2")
str(irs)
str(iris)
class(iris)
install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
# definivion de variables
x= 5
y = 7
c = paste(a, " ",b)
c = paste(a," ",b)
a= "Arriba"
b= "Perú"
c = paste(a," ",b)
a= "Arriba"
b= "Perú"
c = paste(a," ",b)
str(a)
notas= c(18,15,13)
x= seq(1:10)
x
notas= c(18,15,13)
x= seq(1,10)
x
y= seq(1,10, by = 2)
y= seq(1,10, by = 2)
z= rep(1:0, times=4)
notas= c(18,15,13)
x= seq(1,10)
x
y= seq(1,10, by = 2)
z= rep(1:0, times=4)
v= C(notas, xyz, c(1,2,3))
notas= c(18,15,13)
x= seq(1,10)
x
y= seq(1,10, by = 2)
z= rep(1:0, times=4)
v= C(notas, x,y,z, c(1,2,3))
notas= c(18,15,13)
x= seq(1,10)
x
y= seq(1,10, by = 2)
z= rep(1:0, times=4)
v= C(notas, x,y,z,w, c(1,2,5))
notas= c(18,15,13)
x= seq(1,10)
x
y= seq(1,10, by = 2)
z= rep(1:0, times=4)
v= c(notas, x,y,z,w, c(1,2,5))
notas= c(18,15,13)
x= seq(1,10)
x
y= seq(1,10, by = 2)
z= rep(1:0, times=4)
w=rep(1:0,each=4)
v= c(notas, x,y,z,w, c(1,2,5))
ls()
rm(list = c("w","x","y"))
#metodos de los vectores
x = table(v)
x
notas= c(18,15,13)
x= seq(1,10)
x
y= seq(1,10, by = 2)
z= rep(1:0, times=4)
w=rep(1:0,each=4)
v= c(notas, x,y,z,w, c(1,2,5))
x = table(v)
x
ls()
rm(list = c("w","x","y"))
x = table(v)
x
ls()
rm(list = c("w","x","y"))
rm(x)
x = table(v)
x
y= short(v)
y= short(x)
y= sort(v)
y
notas[2]
notas = c(notas, 20,7,12,5)
notas[2]
length(notas)
notas[notas>10]
aprobados = notas[notas>10]
aprobados
x=c(seq(1,3), rep(1,times=3), c(8,7,6))
m
m = matrix(x,nrow=3, ncol=3)
m = matrix(x,nrow=3, ncol=3)
m
mm = matrix(x,nrow=3, ncol=3, byrow = TRUE)
mm
m[,c(1,3)]
m
m = matrix(x,nrow=3, ncol=3)
m
mm = matrix(x,nrow=3, ncol=3, byrow = TRUE)
mm
#seleccion de elementos
m[,c(1,3)]
m
m[,c(1,3)]
m
m
m = matrix(x,nrow=3, ncol=3)
x=c(seq(1,3), rep(1,times=3), c(8,7,6))
m = matrix(x,nrow=3, ncol=3)
m
mm = matrix(x,nrow=3, ncol=3, byrow = TRUE)
mm
#seleccion de elementos
m[,c(1,3)]
m
l= list(x= notas, p1= table(notas), p2= aprobados,
p3 = min(notas))
notas
notas[2]
notas = c(notas, 20,7,12,5)
notas[2]
length(notas)
aprobados = notas[notas>10]
aprobados
#matrices
x=c(seq(1,3), rep(1,times=3), c(8,7,6))
m = matrix(x,nrow=3, ncol=3)
m
mm = matrix(x,nrow=3, ncol=3, byrow = TRUE)
mm
#seleccion de elementos
m[,c(1,3)]
m
#Listas
l= list(x= notas, p1= table(notas), p2= aprobados,
p3 = min(notas))
notas= c(18,15,13)
x= seq(1,10)
x
y= seq(1,10, by = 2)
z= rep(1:0, times=4)
w=rep(1:0,each=4)
v= c(notas, x,y,z,w, c(1,2,5))
#liberar memoria
ls()
rm(list = c("w","x","y"))
#metodos de los vectores
rm(x)
x = table(v)
y= sort(v)
y
#Seleccion de elementos d e un vector
notas
notas[2]
notas = c(notas, 20,7,12,5)
notas[2]
length(notas)
aprobados = notas[notas>10]
aprobados
#matrices
x=c(seq(1,3), rep(1,times=3), c(8,7,6))
m = matrix(x,nrow=3, ncol=3)
m
mm = matrix(x,nrow=3, ncol=3, byrow = TRUE)
mm
#seleccion de elementos
m[,c(1,3)]
m
#Listas
l= list(x= notas, p1= table(notas), p2= aprobados,
p3 = min(notas))
l
r= l[c("p1", "p2", "p3")]
r$p3
r$p2
genero= c(,0,0,0,0,1,1,1,0,1,0,4,0,1,0,1,0,1,0,0,1)
genero.factor = as.factor(genero)
genero.factor
genero= c(0,0,0,0,1,1,1,0,1,0,4,0,1,0,1,0,1,0,0,1)
genero.factor = as.factor(genero)
genero.factor
levels(genero.factor)=c("M","F")
genero= c(0,0,0,0,1,1,1,0,1,0,4,0,1,0,1,0,1,0,0,1)
genero.factor = as.factor(genero)
genero.factor
levels(genero.factor)=c("M","F")
levels(genero.factor)=c("M","F")
df = data.frame(x= seq(1,6), y= rep(7,6), z= c(10,11))
df
df = data.frame(x= seq(1,6), y= rep(7,6), z= c(10,11))
df
View(df)
head(df,n=4)
df$x
df[c("x","z")]
View(df)
setwd("D:/bda_12")
load("clase_04/df_desa.Rdata")
df.desa.F = df.desa
df.desa.F$EstimatedSalary <- ifelse( is.na(df.desa.F$EstimatedSalary),
mean(df.desa.F$EstimatedSalary, na.rm = TRUE), #100001.1
df.desa.F$EstimatedSalary)
hist(df.desa$EstimatedSalary)
hist(df.desa.F$EstimatedSalary)
hist(df.desa$EstimatedSalary)
hist(df.desa.F$EstimatedSalary)
hist(df.desa$EstimatedSalary)
par_orig = par()
par(mfrow=c(1,2))
hist(df.desa.F$EstimatedSalary)
hist(df.desa$EstimatedSalary)
par=par_orig
par_orig = par()
par(mfrow=c(1,2))
hist(df.desa.F$EstimatedSalary)
hist(df.desa$EstimatedSalary)
par=par_orig
summary(df.desa)
hist(df.desa$Age)
hist(df.desa$Age)
boxplot(df.desa$Age)
hist(df.desa$Age)
boxplot(df.desa$Age)
hist(df.desa$Age)
hist(df.desa$Age)
boxplot(df.desa$Age)
quantile(df.desa$Age)
quantile(df.desa$Age, probs = 0.99)
quantile(df.desa.F$Age, probs = 0.99)
df.desa.F$Age <- ifelse( df.desa.F$Age > 72,
72,
df.desa.F$Age)
hist(df.desa$Age)
boxplot(df.desa$Age)
hist(df.desa.F$Age)
boxplot(df.desa.F$Age)
x <- ifelse( df.desa.F$Age > 72,
72,
df.desa.F$Age)
hist(x)
boxplot(x)
quantile(df.desa.F$Age, probs = 0.98)
qa <- quantile(df.desa.F$Age, probs = 0.98) #67
x <- ifelse( df.desa.F$Age > qa,
qa,
df.desa.F$Age)
hist(x)
boxplot(x)
qa <- quantile(df.desa.F$Age, probs = 0.97)
x <- ifelse( df.desa.F$Age > qa,
qa,
df.desa.F$Age)
hist(x)
boxplot(x)
qa <- quantile(df.desa.F$Age, probs = 0.96) #67
x <- ifelse( df.desa.F$Age > qa,
qa,
df.desa.F$Age)
hist(x)
boxplot(x)
hist(x)
boxplot(x)
qa <- quantile(df.desa.F$Age, probs = 0.96)
qa <- quantile(df.desa.F$Age, probs = 0.96)
qa #67
qa <- quantile(df.desa.F$Age, probs = 0.96)
qa #67
qa #62
df.desa.F$Age <- ifelse( df.desa.F$Age > qa,
qa,
df.desa.F$Age)
par_orig = par()
par(mfrow=c(1,2))
hist(df.desa.F$Age)
hist(df.desa$Age)
par=par_orig
df.desa.F$Age
mean(df.desa.F$EstimatedSalary)
#========================
# FEATURE SCALING
#========================
mean(df.desa.F$EstimatedSalary)
sd(df.desa.F$EstimatedSalary)
x <- (df.desa.F$EstimatedSalary - 100001.1) / 57507.99
x
hist(x)
par(mfrow=c(1,1))
hist(x)
hist(df.desa.F$EstimatedSalary)
hist(x)
hist(df.desa.F$EstimatedSalary)
hist(x)
par(mfrow=c(1,2))
hist(df.desa.F$EstimatedSalary)
hist(x)
hist(log2(df.desa.F$EstimatedSalary))
par(mfrow=c(1,3))
hist(df.desa.F$EstimatedSalary)
hist(x)
hist(log2(df.desa.F$EstimatedSalary))
hist(df.desa.F$EstimatedSalary)
hist(x)
hist(log2(df.desa.F$EstimatedSalary))
hist(df.desa.F$EstimatedSalary)
hist(x)
hist(log2(df.desa.F$EstimatedSalary))
par(mfrow=c(1,2))
hist(df.desa.F$EstimatedSalary)
hist(log2(df.desa.F$EstimatedSalary))
mean(log2(df.desa.F$EstimatedSalary))
sd(log2(df.desa.F$EstimatedSalary))
df.desa.F$EstimatedSalary = (log2(df.desa.F$EstimatedSalary) - 16.16905) / 1.441962
par(mfrow=c(1,2))
hist(df.desa$EstimatedSalary)
hist(df.desa.F$EstimatedSalary)
library("caTools", lib.loc="~/R/win-library/3.5")
library(caTools)
split = sample.split(df.desa.F$Exited, SplitRatio = 0.6)
df.desa.F.training <- subset(df.desa.F, split == TRUE)
df.desa.F.test <- subset(df.desa.F, split == FALSE)
pie(table(df.desa.F.training$Exited))
pie(table(df.desa.F.test$Exited))
df.desa.F.train <- subset(df.desa.F, split == TRUE)
View(df.desa.F.training)
save(df.desa.F.train, file = "clase_05/df_train.Rdata")
save(df.desa.F.train, file = "clase_05/df_test.Rdata")
